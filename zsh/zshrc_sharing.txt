export PATH="$PATH:/mnt/c/Windows/System32/"
export PATH="$PATH:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/"

export LC_COLLATE=C
export PATH="$HOME/.pdtm/go/bin:$PATH"


# Because we want to priority using the binaries in osm so we need to put this kind of exports here
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

export EDITOR="vim"
export VISUAL="vim"

# GoLang
export GOROOT=$HOME/.go
export PATH="$GOROOT/bin:$PATH"
export GOPATH=$HOME/go
export PATH="$GOPATH/bin:$PATH"


export ZSH="$HOME/.oh-my-zsh"
ZSH_DISABLE_COMPFIX="true"

plugins=()
source $ZSH/oh-my-zsh.sh

# export shortcuts
# This will fix the issue: CMD.EXE was started with the above path as the current directory.
pushd /mnt/c > /dev/null
export HUSER=$(cmd.exe /C "echo %USERNAME%" | tr -d '\r')
popd > /dev/null


# check if $HOME/.cargo/env is exist
if [ -f "$HOME/.cargo/env" ]; then
    source $HOME/.cargo/env
fi



# function
function mkcdir() {
    mkdir -p -- "$1" &&
        cd -P -- "$1"
}

function fs() {
    if du -b /dev/null >/dev/null 2>&1; then
        local arg=-sbh
    else
        local arg=-sh
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@"
    else
        du $arg .[^.]* ./*
    fi
}

# Change up a variable number of directories
# E.g:
#   cu   -> cd ../
#   cu 2 -> cd ../../
#   cu 3 -> cd ../../../
function cu {
    cd $(printf "%0.s../" $(seq 1 $1))
}
alias grep='grep --color=auto'
alias fd="fdfind"
alias cat="batcat --style=grid"
alias ffdown="ffsend download"
alias ffup="ffsend upload"
alias cc="clipcopy"
alias pp="clippaste | tr -d '\r'"
alias ss="LC_ALL=C sort -u"
alias fpath="readlink -f"
alias gpush="git add . && git commit -m \".\" && git push"

# https://docs.azul.com/core/zulu-openjdk/install/debian
alias java8="export JAVA_HOME=/usr/lib/jvm/zulu8"
alias java17="export JAVA_HOME=/usr/lib/jvm/zulu17"
export PATH="$JAVA_HOME/bin:$PATH"


# Pure theme
ZSH_THEME=""

######OPTIONS#######
setopt append_history
setopt SHARE_HISTORY
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_ignore_space

HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
HISTCONTROL=ignoredups:ignorespace

setopt NO_BG_NICE
setopt NO_HUP
setopt NO_LIST_BEEP
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS

# function
function mkcdir() {
    mkdir -p -- "$1" &&
        cd -P -- "$1"
}

function fs() {
    if du -b /dev/null >/dev/null 2>&1; then
        local arg=-sbh
    else
        local arg=-sh
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@"
    else
        du $arg .[^.]* ./*
    fi
}



### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone --depth=1 https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
            print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

#####################
# PROMPT            #
#####################
# Load starship theme (requires nerd fonts)
zinit ice from"gh-r" as"command" atload'eval "$(starship init zsh)"'
zinit load starship/starship


##########################
# OMZ Libs and Plugins   #
##########################
setopt promptsubst


# IMPORTANT:
# Ohmyzsh plugins and libs are loaded first as some these sets some defaults which are required later on.
# Otherwise something will look messed up
# ie. some settings help zsh-autosuggestions to clear after tab completion
# Oh My Zsh
zinit for \
      OMZL::correction.zsh \
      OMZL::directories.zsh \
      OMZL::history.zsh \
      OMZL::key-bindings.zsh \
      OMZL::spectrum.zsh \
      OMZL::theme-and-appearance.zsh \
      OMZL::termsupport.zsh \
      OMZL::clipboard.zsh \
      OMZP::common-aliases 

zinit wait lucid for \
      OMZP::colored-man-pages \
      OMZP::cp \
      OMZP::extract \
      OMZP::fancy-ctrl-z \
      OMZP::git \
      OMZP::sudo 



#####################
# PLUGINS           #
#####################
# @source: https://github.com/crivotz/dot_files/blob/master/linux/zplugin/zshrc

# IMPORTANT:
# These plugins should be loaded after ohmyzsh plugins



# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode depth"1" for \
      zdharma-continuum/zinit-annex-bin-gem-node \
      zdharma-continuum/zinit-annex-patch-dl


# Completion enhancements
zle_bracketed_paste=() # to fix slow pasting
# This is the correct syntax to append elements to an array in Zsh
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(expand-or-complete bracketed-paste accept-line push-line-or-edit); export ZSH_AUTOSUGGEST_CLEAR_WIDGETS
# export some global variables for zsh autosuggestions
## export ZSH_AUTOSUGGEST_MANUAL_REBIND=1
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
zi wait lucid for \
  atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    light-mode zdharma-continuum/fast-syntax-highlighting \
  atload"zicompinit; zicdreplay" blockf \
    light-mode zsh-users/zsh-completions \
  compile'{src/*.zsh,src/strategies/*}' atinit"
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_USE_ASYNC=1
" atload"!_zsh_autosuggest_start" \
    light-mode zsh-users/zsh-autosuggestions

# Modern Unix commands
# See https://github.com/ibraheemdev/modern-unix
zinit wait as"null" lucid from"gh-r" for \
      atload"alias diff=delta" sbin"**/delta" dandavison/delta \
      atload"alias df=duf" bpick"*(.zip|tar.gz)" sbin muesli/duf \
      atload"alias du=dust" sbin"**/dust" bootandy/dust \
      atload"alias ping=gping" sbin"**/gping" orf/gping \
      bpick"*.zip" sbin"**/procs" if'(( $+commands[unzip] )) && [[ $CPUTYPE != aarch* ]]' dalance/procs


# Install jq
zinit ice lucid wait"1" lucid from"gh-r" as"program" mv"jq-* -> jq" pick"jq"
zinit light jqlang/jq

# Install ffuf
zinit ice lucid wait"1" lucid from"gh-r" as"program" bpick"*.tar.gz" sbin"**/ffuf"
zinit light ffuf/ffuf

# Install pdtm
zinit ice lucid wait"1" lucid from"gh-r" as"program" bpick"*.zip" sbin"**/pdtm"
zinit light projectdiscovery/pdtm

# FZF: fuzzy finderls
zinit ice wait lucid as"null" from"gh-r" src'key-bindings.zsh' completions sbin'**/fzf' \
      dl'https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.zsh;
         https://raw.githubusercontent.com/junegunn/fzf/master/shell/completion.zsh -> _fzf;'
		 
zinit light junegunn/fzf

## remove green background color in directory
LS_COLORS+=':ow=01;33'

#### FZF TAB #####
zinit light Aloxaf/fzf-tab
# Preivew `kill` and `ps` commands
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-flags '--preview-window=down:20:wrap'
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'


export FZF_DEFAULT_COMMAND="fd --hidden --follow --exclude={.git,.idea,.vscode,.sass-cache,node_modules,vendor,\*\*/.DS_Store}  --exclude node_modules || git ls-tree -r --name-only HEAD || rg  --hidden --follow --glob '!.git' || find ."
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS="--height 50% -1 --reverse --multi --inline-info --bind='f2:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | clipcopy)'"

export FZF_CTRL_T_OPTS="--preview '(bat --style=numbers --color=always {} || cat {} || tree -NC {}) 2> /dev/null | head -400'"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:20:hidden:wrap --bind '?:toggle-preview' --exact"
export FZF_ALT_C_OPTS="--preview 'tree -NC {} | head -400'"



zinit ice lucid wait from"gh-r" as"program" \
                    pick"zoxide/zoxide" \
                    atload'eval "$(zoxide init zsh)"'
zinit light ajeetdsouza/zoxide


# Install `ffsend` (a Firefox Send client) statically-linked binary
zinit ice wait"0b" lucid as"command" from"gh-r" bpick"*-static" mv"* -> ffsend";
    zinit light timvisee/ffsend
# Install `ffsend` completions
zinit ice wait"0a" lucid as'completion' id-as'timvisee/ffsend_completions'
    zinit snippet  'https://raw.githubusercontent.com/timvisee/ffsend/master/contrib/completions/_ffsend'


# —————————————————— History completion ———————————————————
# autocompletion using arrow keys (based on history)
# autoload -U up-line-or-beginning-search
# autoload -U down-line-or-beginning-search
# Up arrow
bindkey "${terminfo[kcuu1]}" history-search-backward
# Down arrow
bindkey "${terminfo[kcud1]}" history-search-forward

unalias gf >/dev/null 2>&1

if type exa >/dev/null; then
	alias ls='exa -F   --group-directories-first'
	alias ll='exa -Fl  --group-directories-first'
	alias la='exa -Fla --group-directories-first'
	alias tree='exa -F --group-directories-first --tree'
	alias treel='exa -Fl --group-directories-first --tree'
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# ---------- color config
# EmEditor alias
alias code="/mnt/c/Users/$HUSER/AppData/Local/Programs/Microsoft\ VS\ Code/bin/code"
